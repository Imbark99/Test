# Import necessary libraries
import streamlit as st
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Streamlit app definition
def main():
    st.title("Streamlit Capabilities Showcase")

    # 1. Displaying text
    st.subheader("1. Displaying Text")
    st.write("This is simple text displayed using Streamlit's `write` method.")

    # 2. Displaying data
    st.subheader("2. Displaying Data")
    df = pd.DataFrame({
        'A': np.random.rand(10),
        'B': np.random.rand(10)
    })
    st.dataframe(df)

    # 3. Interactive widgets
    st.subheader("3. Interactive Widgets")
    
    number = st.slider("Choose a number", 1, 100)
    st.write(f"You selected {number}")

    if st.button("Click me"):
        st.write("Button clicked!")

    option = st.selectbox(
        'Select a fruit',
        ['Apple', 'Banana', 'Cherry'])
    st.write('You selected:', option)

    # 4. Plotting data
    st.subheader("4. Plotting Data")

    fig, ax = plt.subplots()
    ax.scatter(df['A'], df['B'], color='blue')
    ax.set_title('Scatter plot of random data')
    st.pyplot(fig)

    # 5. Caching
    st.subheader("5. Caching (run the app multiple times to see this in action)")
    result = expensive_computation()
    st.write("This number is cached:", result)

@st.cache  # This decorator will ensure the function's output is cached.
def expensive_computation():
    st.write("Computing...")
    return np.random.randint(1000)

if __name__ == "__main__":
    main()